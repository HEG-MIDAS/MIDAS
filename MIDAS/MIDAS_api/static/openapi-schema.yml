openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/status/:
    get:
      operationId: listStatus
      description: 'Return the status of the website, more precisely, if the sources
        of the website are all available, some, or none of them.


        Returns

        -------

        json -> Response'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/sources/:
    get:
      operationId: listSources
      description: List all Sources
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'
          description: ''
      tags:
      - api
  /api/sources/{id}/:
    get:
      operationId: retrieveSource
      description: 'Retrieve a specific Source by the slug


        To make it work with both the pk and the slug,

        In urls.py:

        path(''sources/<int:pk>/'', views.SourceDetail.as_view(), name=''source_pk''),

        path(''sources/<str:slug>/'', views.SourceDetail.as_view(), name=''source_slug'',lookup_field=''slug''),


        Remove the lookup_field from this view ! (Needs to do it for all *Detail views)'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this source.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
      tags:
      - api
  /api/sources/{slug}/:
    get:
      operationId: retrieveSource
      description: 'Retrieve a specific Source by the slug


        To make it work with both the pk and the slug,

        In urls.py:

        path(''sources/<int:pk>/'', views.SourceDetail.as_view(), name=''source_pk''),

        path(''sources/<str:slug>/'', views.SourceDetail.as_view(), name=''source_slug'',lookup_field=''slug''),


        Remove the lookup_field from this view ! (Needs to do it for all *Detail views)'
      parameters:
      - name: slug
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
      tags:
      - api
  /api/stations/:
    get:
      operationId: listStations
      description: List all Stations
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Station'
          description: ''
      tags:
      - api
  /api/stations/{id}/:
    get:
      operationId: retrieveStation
      description: Retrieve a specific Station by the slug
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this station.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
          description: ''
      tags:
      - api
  /api/stations/{slug}/:
    get:
      operationId: retrieveStation
      description: Retrieve a specific Station by the slug
      parameters:
      - name: slug
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
          description: ''
      tags:
      - api
  /api/parameters/:
    get:
      operationId: listParameters
      description: List all Parameters
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Parameter'
          description: ''
      tags:
      - api
  /api/parameters/{id}/:
    get:
      operationId: retrieveParameter
      description: Retrieve a specific Parameter by the slug
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this parameter.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: ''
      tags:
      - api
  /api/parameters/{slug}/:
    get:
      operationId: retrieveParameter
      description: Retrieve a specific Parameter by the slug
      parameters:
      - name: slug
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: ''
      tags:
      - api
  /api/favorites-group/:
    get:
      operationId: listGroupOfFavorites
      description: List all Parameters
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteGroup'
          description: ''
      tags:
      - api
  /api/favorites-group/{id}/:
    get:
      operationId: retrieveGroupOfFavorite
      description: Retrieve a specific Parameter by the slug
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group of favorite.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteGroup'
          description: ''
      tags:
      - api
  /api/favorites-group/{slug}/:
    get:
      operationId: retrieveGroupOfFavorite
      description: Retrieve a specific Parameter by the slug
      parameters:
      - name: slug
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteGroup'
          description: ''
      tags:
      - api
  /api/filter/:
    post:
      operationId: createFilter
      description: "Filter data. If stations, filter params, if sources, filter stations\n\
        \nPOST Parameters\n----------\nsources : array or string\n    list of sources\
        \ or one source (required)\nstations : array or string\n    list of stations\
        \ or one station\n\nReturns\n-------\njson\n    list of stations or parameters\
        \ for the corresponding parameters in json format\n    source -> station ->\
        \ timestamp -> parameters"
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/search/:
    post:
      operationId: createSearch
      description: "Search datas in files\n\nPOST Parameters\n----------\nsources\
        \ : array\n    list of sources (required)\nstations : array\n    list of stations\
        \ (required)\nparameters : array\n    list of parameters (required)"
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    Source:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{1,5})?(?:[/?#][^\\\
            s]*)?\\z"
        infos:
          type: string
          maxLength: 500
        station:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 255
              slug:
                type: string
                readOnly: true
      required:
      - station
    Station:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          readOnly: true
        source:
          type: string
          readOnly: true
        infos:
          type: string
          maxLength: 500
        latitude:
          type: string
          format: decimal
          multipleOf: 1.0e-15
          maximum: 1000000000000000
          minimum: -1000000000000000
          nullable: true
        longitude:
          type: string
          format: decimal
          multipleOf: 1.0e-15
          maximum: 1000000000000000
          minimum: -1000000000000000
          nullable: true
        height:
          type: string
          format: decimal
          multipleOf: 1.0e-05
          maximum: 100000
          minimum: -100000
          nullable: true
          description: Height in meters
        parameters_list:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                readOnly: true
              slug:
                type: string
                readOnly: true
              infos:
                type: string
                readOnly: true
      required:
      - parameters_list
    Parameter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          readOnly: true
        infos:
          type: string
          maxLength: 500
    FavoriteGroup:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        favorites_list:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              parameters_of_station:
                type: array
                items:
                  type: object
                  properties:
                    station:
                      type: string
                      readOnly: true
                    parameter:
                      type: string
                      readOnly: true
            required:
            - parameters_of_station
      required:
      - favorites_list
